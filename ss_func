#!/bin/bash
# Script for EagleEyes system function test by EFCO Sam

#For Debug
#set -xv

LOC="/home/production"
AIC_LOC="$LOC/hw_test/tools/EKit_L/release/X64"
BURN_LOC="$LOC/hw_test/tools/burnintest/64bit"
EEUPDATE_LOC="$LOC/hw_test/tools/intel/Linux_x64/OEM_Mfg"
SERIAL_LOC="$LOC/hw_test/tools"
SCR_LOC="$LOC/hw_test"
TMP_LOC="$LOC/hw_test/tmp"
LIB_LOC="$LOC/hw_test/lib"
LOG_LOC="$LOC/EagleEyes_LOG"
USB30_LOC="$LOC/hw_test/tmp/usb30.tmp"

AIC_LOG="/tmp/aic.tmp"
AT_LOG="/tmp/at.tmp"
ALSA_LOG="/tmp/alsa.tmp"
MIC_LOG="/tmp/mic.tmp"
DIO_LOG="/tmp/dio.tmp"
IDIO_LOG="/tmp/idio.tmp"
BI_LOG="/tmp/bi.log"
MAC_LOG="/tmp/mac.tmp"
MEM_LOG="/tmp/mem.tmp"
MODEL_LOG="/tmp/model.tmp"
NVM_LOG="/tmp/nvm.tmp"
ADDR_LOG="/tmp/addr.tmp"
BIOS_LOG="/tmp/bios.tmp"

aic_info_get(){
	rm $AIC_LOG
	cd $AIC_LOC; ./aic_info.exp  | tee -a $AIC_LOG
	if [ $? = 0 ];then
                echo "- Get aic info pass !" | tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "- Get aic info fail !" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Get aic info fail !"
        fi
}

aic_fw_check(){
	AIC_FW=$(cat $AIC_LOG |grep -m1 "AIC" |cut -c 3-10 )
	echo "- Check AIC FW revision is $AIC_FW !" | tee -a $LOG_LOC/$SN_LOG.log
}

aic_v3fw_check(){
	AIC_FW=$(cat $AIC_LOG |grep $1 |awk '{print $1}' | cut -c 1-8 )
        if [ $AIC_FW = $1 ] ;then
		echo "- Check AIC FW revision is $AIC_FW ! spec is $1 !" | tee -a $LOG_LOC/$SN_LOG.log
        else
		echo "- Check AIC FW revision is $AIC_FW fail ! spec is $1 !" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog " Check AIC FW $AIC_FW fail ! spec is $1 !"
        fi
}


aic_logo_check(){
	AIC_LOGO=$(cat $AIC_LOG |grep "Logo" |awk '{print $4}')
        if [ $AIC_LOGO = $1 ] ;then
                echo "- Check AIC DDM Logo diaplay None !" | tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "- Check AIC DDM Logo display None fail !" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check AIC DDM Logo display None fail !"
        fi
}

aic_12mon_check(){
	AIC_VOLT=$(cat $AIC_LOG |grep -m1 $1 |awk '{print $5}' )
	AIC_V1=$(cat $AIC_LOG |grep -m1 $1 |awk '{print $5}' |cut -c 1-2)
	AIC_V2=$(cat $AIC_LOG |grep -m1 $1 |awk '{print $5}' |cut -c 1-2)
        if [ $AIC_V1 -eq $2 ] || [ $AIC_V2 -eq $3 ] ;then
                echo "- Check AIC $1 Volt is $AIC_VOLT !" | tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "- Check AIC $1 Volt is $AIC_VOLT fail! spec is $2 - $3 !" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check AIC $1 Volt is $AIC_VOLT fail! spec is $2 - $3 !"
        fi
}
aic_hwmon_check(){
	AIC_VOLT=$(cat $AIC_LOG |grep -m1 $1 |awk '{print $5}' )
	AIC_V1=$(cat $AIC_LOG |grep -m1 $1 |awk '{print $5}' |cut -c 1)
	AIC_V2=$(cat $AIC_LOG |grep -m1 $1 |awk '{print $5}' |cut -c 1)
        if [ $AIC_V1 -eq $2 ] || [ $AIC_V2 -eq $3 ] ;then
                echo "- Check AIC $1 Volt is $AIC_VOLT !" | tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "- Check AIC $1 Volt is $AIC_VOLT fail! spec is $2 - $3 !" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check AIC $1 Volt is $AIC_VOLT fail! spec is $2 - $3 !"
        fi
}

aic_poe_check(){
	AIC_POE=$(cat $AIC_LOG |grep "PoE  $1" |awk '{print $6}')
        if [ $AIC_POE != 0 ] ;then
                echo "- Check AIC PoE $1 Volt is $AIC_POE !" | tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "- Check AIC PoE $1 Volt is $AIC_POE fail !" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check AIC PoE Volt is $AIC_POE fail !"
        fi
}

aic_com_check(){
	AIC_COM=$(cat $AIC_LOG |grep "COM  $1" |awk '{print $4}')
        if [ $AIC_COM = $2 ] ;then
                echo "- Check AIC COM $1 is $AIC_COM ! spec is $2 !" | tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "- Check AIC COM $1 is $AIC_COM fail ! spec is $2 !" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check AIC COM $1 is $AIC_COM fail !"
        fi
}

aic_atx_check(){
	AIC_ATX=$(cat $AIC_LOG |grep "  Mode:" |awk '{print $2}')
        if [ $AIC_ATX = $1 ] ;then
                echo "- Check AIC power mode is $AIC_ATX ! spec is $1 !" | tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "- Check AIC power mode is $AIC_ATX fail ! spec is $1 !" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check AIC power mode is $AIC_ATX fail ! spec is $1 !"
        fi
}

aic_usb_check(){
	AIC_USB=$(cat $AIC_LOG |grep "USB  $1" |awk '{print $4}')
        if [ $AIC_USB = ON ] ;then
                echo "- Check AIC USB $1 mode is $AIC_USB !" | tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "- Check AIC USB $1 mode is $AIC_USB fail ! spec is ON !" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check AIC USB mode is $AIC_USB fail ! spec is ON !"
        fi
}

aic_fan_cfg_check(){
	AIC_FAN=$(cat $AIC_LOG |grep "Fan $1 Auto" |cut -c 1-31)
	cat $AIC_LOG |grep "Fan $1 Auto"  
        if [ $? = 0 ] ;then
                echo "- Check AIC cfg $AIC_FAN !" | tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "- Check AIC FAN cfg $AIC_FAN fail !" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check AIC FAN cfg $AIC_FAN fail !"
        fi
}

aic_fan_rpm_check(){
	AIC_RPM=$(cat $AIC_LOG |grep "Fan $1 RPM" |awk '{print $4}')
        if [ $AIC_RPM -ge $2 ] ;then
                echo "- Check AIC Fan $1 RPM is $AIC_RPM ! spec is $2 !" | tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "- Check AIC Fan $1 RPM is $AIC_RPM fail ! spec is $2 !" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check AIC Fan $1 RPM is $AIC_RPM fail ! spec is $2 !"
        fi
}


aic_gpio_check(){
	AIC_GPIO=$(cat $AIC_LOG |grep "GPIO1" |awk '{print $2}')
        if [ $AIC_GPIO = $1 ] ;then
                echo "- Check AIC GPIO is $AIC_GPIO ! spec is $1 !" | tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "- Check AIC GPIO is $AIC_GPIO fail ! spec is $1 !" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check AIC GPIO is $AIC_GPIO fail ! spec is $1 !"
        fi
}

bios_version_check(){
	rm $BIOS_LOG
	sudo dmidecode -s bios-version >> $BIOS_LOG 
	BIOS_V=$(cat $BIOS_LOG)
        if [ $BIOS_V = $1 ] ;then
                echo "- Check BIOS version is $BIOS_V ! spec is $1 !" | tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "- Check BIOS version is $BIOS_V fail ! spec is $1 !" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check BIOS version is $BIOS_V fail ! spec is $1 !"
        fi
}

cpu_temp_check(){
        TEMP_LOG=$TMP_LOC/temp.tmp
        rm -r $TEMP_LOG
        sensors -A | tee -a $TEMP_LOG
        CPU_TEMP_LOG=$(sensors -A |grep "Core 0" |awk '{print $3}' |cut -c 1-3)
        #SYS_TEMP_LOG=$(sensors -A |grep "temp1" |awk '{print $2}' |cut -c 1-3)
        #echo "****** Syetem temp $SYS_TEMP_LOG C !  ******" | tee -a $LOG_LOC/$SN_LOG.log

        if [ $CPU_TEMP_LOG -ge $1 ] && [ $CPU_TEMP_LOG -le $2 ];then
                echo "- Check CPU temp $CPU_TEMP_LOG C passed!, spec $1 to  $2 C" | tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "- Check CPU temp $CPU_TEMP_LOG C failed!, spec $1 to  $2 C" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check CPU temp $CPU_TEMP_LOG C failed!, spec $1 - $2 C"
        fi
}


display_check(){
        clear
        dialog --title "[DISPLAY CHECK]" --yesno "Check Display is work (Yes/No) - $1 " 10 50
        response=$?
        case $response in
                0)
                echo "- Check Display is work - $1" | tee -a $LOG_LOC/$SN_LOG.log
                ;;
                1)
                echo "****** Check Display is not work - $1 ******" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check Display is not work - $1 !"
                ;;
        esac
}


fail_red_dialog(){
        dialog --title  TESTING_RESULT  --colors --yesno\
        "\Zb\Z1FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL\
         FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL\
         FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL\
         FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL\
         FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL\
         FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL\
         FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL\
         FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL\
         FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL\
         FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL_FAIL\
         -------------------------------------------------\
         \Zn $1 \n\
        Esc= Back to MAIN-MENU\n Yes= Test again\n No= Power off 
        " 20 55
        #0=yes 1=no 255=Esc
        response=$?
        case $response in
                0)
                   #echo "" >> $LOG_LOC/$SN_LOG.log
                   echo "****** TEST_FAILED! ****** " >> $LOG_LOC/$SN_LOG.log
                   mv $LOG_LOC/$SN_LOG.log $LOG_LOC/$SN_LOG-FAIL.log
                   #onedrive_log_sync
                   clear
                   sh /home/production/hw_test/t.sh
                   exit
                exit 0 ;;

                1)
                   #echo "" >> $LOG_LOC/$SN_LOG.log
                   echo "****** TEST_FAILED! ****** " >> $LOG_LOC/$SN_LOG.log
                   mv $LOG_LOC/$SN_LOG.log $LOG_LOC/$SN_LOG-FAIL.log
                   #onedrive_log_sync
                   sync
                   poweroff
                exit 1 ;;

                255)
                   #echo "" >> $LOG_LOC/$SN_LOG.log
                   echo "****** TEST_FAILED! ****** " >> $LOG_LOC/$SN_LOG.log
                   mv $LOG_LOC/$SN_LOG.log $LOG_LOC/$SN_LOG-FAIL.log
                   #usb_log_sync
                   echo "cd $SCR_LOC; sudo sh run_main.sh" > $SCR_LOC/t.sh
                   sudo sh $SCR_LOC/t.sh
                exit 255 ;;
        esac
}

hwclock_write(){
        sudo timedatectl set-ntp no
        sudo timedatectl set-time "$1"
        sudo hwclock -w
}


hwclock_check(){
        BT=$(sudo hwclock)
        BTC=$(sudo hwclock | cut -c 1-4)
        if [ $BTC = $1 ]; then
                echo "- Check RTC $BT passed!, spec $1 !" | tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "- Check RTC $BT failed!, spec $1 !" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check RTC $BT failed!, spec $1 !"
        fi
}

hwclock_check_live(){
        BT=$(sudo hwclock)
        BTC=$(sudo hwclock | cut -c 1-4)
        LIVE_YEAR=$(curl -v www.stdtime.gov.tw 2>&1 | grep Date | awk '{print $6}')
        LIVE_MONTH=$(curl -v www.stdtime.gov.tw 2>&1 | grep Date | awk '{print $5}')
        LIVE_DAY=$(curl -v www.stdtime.gov.tw 2>&1 | grep Date | awk '{print $4}')
        if [ $BTC = $LIVE_YEAR ]; then
                echo "- Check RTC $BT passed!, spec $LIVE_YEAR !" | tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "- Check RTC $BT failed!, spec $LIVE_YEAR !" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check RTC $BT failed!, spec $LIVE_YEAR !"
        fi
}

#1=device 2=mac_head 3=another mac_head
lan_mac_check(){
        #echo "****** LAN MAC check!  ******" | tee -a $LOG_LOC/$SN_LOG.log
        cat "/sys/class/net/$1/address"
        if [ $? = 0 ];then
                echo "- Check $1 device OK!" | tee -a $LOG_LOC/$SN_LOG.log
                LAN=$1
        else
                echo "- Check $1 device failed!  ******" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "- Check $1 device failed!"
        fi
        MAC=$(cat "/sys/class/net/$LAN/address")
        MAC_HEAD=$(cat "/sys/class/net/$LAN/address" | cut -c 1-8)
        if [ $MAC_HEAD = $2 ] || [ $MAC_HEAD = $3 ]; then
                echo "- Check $LAN MAC $MAC passed!, spec $2 $3!" | tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "- Check $LAN MAC $MAC failed!, spec $2 $3!" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check $LAN MAC $MAC failed!, spec $2 $3!"
        fi
}


lan_carrier_check(){
        CARRIER=$(cat "/sys/class/net/$1/carrier")
        if [ $CARRIER = 1 ] ; then
                echo "- Check $1 LAN carrier link passed!" | tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "****** Check $1 LAN carrier failed!  ******" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check $1 LAN carrier failed!"
        fi
}

lan_ip_check(){
        IP=$(ip addr show $1 | grep -w "inet" | awk '{print $2}')
        IP_HEAD=$(ip addr show $1 | grep -w "inet" | awk '{print $2}' | cut -c 1-7)
        if [ $IP_HEAD = "192.168" ] ; then
                echo "- Check $1 IP ADDRESS $IP passed!" | tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "****** Check $1 IP $IP failed!  ******" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check $1 IP $IP failed!"
        fi
}


lan_ping_check(){
        sleep 1
        ping -c 1 $1
        if [ $? = 0 ];then
                echo "- Check $1 ping pass !" | tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "- Check $1 ping fail !" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check $1 ping fail !"
        fi
}

alsabat_loopback_test(){
	sudo rm $ALSA_LOG
	sleep 1
        alsabat -Dplughw:0,0 | tee -a $ALSA_LOG
	#sleep 5
	ALSA_CHECK=$(cat $ALSA_LOG | grep "Return value" | awk '{print $4}' )
	if [ $ALSA_CHECK = 0 ];then
                echo "- Check audio loopback value is $ALSA_CHECK passed!" | tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "- Check audio loopbacl value is $ALSA_CHECK failed!" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check audio loopback value is $ALSA_CHECK failed !"
        fi
}

mic_loopback_test(){
	rm $MIC_LOG
        aplay $SERIAL_LOC/default_dual.wav & 
	#sleep 1
	arecord -d 3 -vvv -f dat /dev/null 2> $MIC_LOG
        sum=0
        i=0
        while [ $i -lt 10 ]
        do
                i=$(($i+1))
		MIC_CHECK=$(tail $MIC_LOG | awk NR==$i | cut -c 67)
                #MIC_CHECK=$(tail $MIC_LOG | awk NR==$i | awk '{print $7}' | cut -c 1-2)
                sum=$(($sum+$MIC_CHECK))
        done

        if [ $sum -ge $1 ] ;then
                echo "- Check MIC sum is $sum  passed!, spec $1 !" | tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "- Check MIC sum is $sum  failed!, spec $1 !" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check MIC sum $sum failed!, spec $1"
        fi
}

memory_check(){
	rm -r $MEM_LOG
	free -m | tee -a $MEM_LOG
	TCHK=$(cat $MEM_LOG | grep "Mem" | cut -c 16-19)
	if [ $TCHK -eq $1 ] || [ $TCHK -eq $2 ] ;then
		echo "- Check Memory is $TCHK  passed!, spec $1 $2 !" | tee -a $LOG_LOC/$SN_LOG.log
	else
		echo "- Check Memory is $TCHK  failed!, spec $1 $2 !" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check Memory $sum failed!, spec $1 $2"
        fi
}


pass_green_dialog(){
        dialog --title TESTING_RESULT --colors --yesno\
        "\Zb\Z2PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS\
         PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS\
         PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS\
         PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS\
         PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS\
         PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS\
         PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS\
         PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS\
         PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS\
         PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS_PASS\
         -------------------------------------------------\
         \ZnPower off the system (Yes/No)
        " 20 55

        #0=yes 1=no 255=Esc
        response=$?
        case $response in
                0)
                   #echo "" >> $LOG_LOC/$SN_LOG.log
                   echo "****** TEST_PASSED! ****** " >> $LOG_LOC/$SN_LOG.log
                   mv $LOG_LOC/$SN_LOG.log $LOG_LOC/$SN_LOG-PASS.log
                   #usb_log_sync
                   #onedrive_log_sync
                   sync
                   poweroff
                exit 0;;
                1)
                   #echo "" >> $LOG_LOC/$SN_LOG.log
                   echo "****** TEST_PASSED! ****** " >> $LOG_LOC/$SN_LOG.log
                   mv $LOG_LOC/$SN_LOG.log $LOG_LOC/$SN_LOG-PASS.log
                   #usb_log_sync
                   #onedrive_log_sync
                   echo "Back to shell"
                exit 1;;
                255)
                   #echo "" >> $LOG_LOC/$SN_LOG.log
                   echo "****** TEST_PASSED! ****** " >> $LOG_LOC/$SN_LOG.log
                   mv $LOG_LOC/$SN_LOG.log $LOG_LOC/$SN_LOG-PASS.log
                   #usb_log_sync
                exit 255;;
        esac
}


warning_yellow_dialog(){
        dialog --title TESTING_RESULT --colors --yesno\
        "\Zb\Z3WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN\
         WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN\
         WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN\
         WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN\
         WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN\
         WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN\
         WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN\
         WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN\
         WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN\
         WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN_WARN\
         -------------------------------------------------\
         \ZnContinue test(Yes/No)
        " 20 55

        #0=yes 1=no 255=Esc
        response=$?
        case $response in
                0)
                   echo "- TEST_WARNING!" >> $LOG_LOC/$SN_LOG.log
                #exit 0;;
                ;;
                1)
                   echo "- TEST_WARNING!" >> $LOG_LOC/$SN_LOG.log
                   mv $LOG_LOC/$SN_LOG.log $LOG_LOC/$SN_LOG-WARN.log
                   #usb_log_sync
                   #onedrive_log_sync
                   echo "Back to shell"
                exit 1;;
                255)
                   echo "- TEST_WARNING!" >> $LOG_LOC/$SN_LOG.log
                   mv $LOG_LOC/$SN_LOG.log $LOG_LOC/$SN_LOG-WARN.log
                   #usb_log_sync
                exit 255;;
        esac
}


pci_dev_check(){
        lspci |grep "$1"
        if [ $? = 0 ]; then
                echo "- Check PCI dev $1 passed !" | tee -a $LOG_LOC/$SN_LOG.log
                lspci |grep "$1" |tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "- Check PCI dev $1 failed !" | tee -a $LOG_LOC/$SN_LOG.log
                lspci |grep "$1" |tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check PCI dev $1 failed !"
        fi
}


serial_loop_test(){
        sudo $SERIAL_LOC/serial-test -p $1 -b 115200 -o 1 -i 3
        if [ $? = 0 ]; then
                echo "- Check RS232 $1 loopback passed !" | tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "- Check RS232 $1 loopback failed !" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check RS232 loopback $1 failed !"
        fi
}

serial_loop_test_menu(){
	clear
        dialog --title "[SERIAL COM CHECK]" --msgbox "Check COM loopback at - $2 " 10 50
        sudo $SERIAL_LOC/serial-test -p $1 -b 115200 -o 1 -i 3
        if [ $? = 0 ]; then
                echo "- Check RS232 $2 $1 loopback passed !" | tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "- Check RS232 $2 $1 loopback failed !" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "Check RS232 loopback $1 failed !"
        fi
}


sn_get_dialog(){
        SN_TMP=$TMP_LOC/sn.tmp
#       rm -f $SN_TMP
        MODEL=$0
        dialog --title "$MODEL Test" \
        --inputbox "Cancel=Back to MAIN-MENU \nPlease Scan the SN of Label:" \
        10 40 2> $SN_TMP
        if [ $? = 0 ]; then
                SN_LOG=$(cat $SN_TMP)-$MODEL-$(date '+%Y%m%d%H%M%S')
                echo Test Model: $0 >> $LOG_LOC/$SN_LOG.log
                echo Serial Number: $(cat $SN_TMP) >> $LOG_LOC/$SN_LOG.log
                echo Test Start: $(date '+%Y%m%d%H%M%S') >> $LOG_LOC/$SN_LOG.log
        else
                echo "cd $SCR_LOC; sudo sh run_main.sh" > $SCR_LOC/t.sh
                sudo sh $SCR_LOC/t.sh
                exit 1
        fi
}

sn_get_nodate_dialog(){
        SN_TMP=$TMP_LOC/sn.tmp
        MODEL=$0
        dialog --title "$MODEL Test" \
        --inputbox "Cancel=Back to MAIN-MENU \nPlease Scan the SN of Label:" \
        10 40 2> $SN_TMP
        if [ $? = 0 ]; then
                SN_LOG=$(cat $SN_TMP)-$MODEL-$(date '+%H%M%S')
                echo Test Model: $0 >> $LOG_LOC/$SN_LOG.log
                echo Serial Number: $(cat $SN_TMP) >> $LOG_LOC/$SN_LOG.log
                echo Test Start: $(date '+%H%M%S') >> $LOG_LOC/$SN_LOG.log
        else
                echo "cd $SCR_LOC; sudo sh run_main.sh" > $SCR_LOC/t.sh
                sudo sh $SCR_LOC/t.sh
                exit 1
        fi
}


usb_dev_count(){
        count=$(lsusb | grep "$1" |wc -l)
        if [ $count = $2 ] || [ $count = $3 ] ; then
                echo "- Check USB device count $1 X $count passed! spec $2 $3 !" | tee -a $LOG_LOC/$SN_LOG.log

                #lsusb |grep "$1" |tee -a $LOG_LOC/$SN_LOG.log
        else
                echo "- Check USB device count $1 X $count failed! spec $2 $3 !" | tee -a $LOG_LOC/$SN_LOG.log
                lsusb |grep "$1" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "- Check USB dev count $1 X $count failed! spec $2 $3 !"
        fi
}


time_ntp_set(){
        ping ntp.ubuntu.com -c 1
        if [ $? = 0 ]; then
                echo "- Check ping ntp passed !" | tee -a $LOG_LOC/$SN_LOG.log

        else
                echo "- Check ping ntp failed !" | tee -a $LOG_LOC/$SN_LOG.log
                fail_red_dialog "- Check ping ntp failed !"
        fi
        timedatectl set-ntp yes &
        timedatectl &
        sleep 1
        sudo hwclock -w
}

system_info_log(){
	lshw -short | tee -a $LOG_LOC/$SN_LOG.log
}

usb_log_sync(){
        sudo rsync -avh $LOG_LOC /media/production/USB30/ss_log/
}


onedrive_log_sync(){
        sudo rclone copy $LOG_LOC onedrive:General/EagleEyes_LOG -P
}

onedrive_to_local(){
        #sudo rclone copy onedrive:General/u7_log /home/production/u7_log -P
        sudo rclone sync onedrive:General/u7_log $LOG_LOC -P
}

